function [F] = fOdijkInv_network(d, Lp, Lc, S, Fscale, F0, kT)
% Odijk Worm-like Chain (inverse)
%
% INPUT:
% d = extension (um)
% Lp = persistence length (nm)
% Lc = contour length (um)
% S = stretching modulus (pN)
% kT = Boltzmann's constant times the temperature (optional; default:
%   4.11 pN nm)
%
% OUTPUT:
% F = force (pN)
%
% SEE ALSO:
% fOdijk

if nargin < 7
    kT = 4.11;
end

F = (d.*Fscale+1).*real(...
        (2.*(Lp.*Lc.*S.*d - Lp.*S.*Lc.^2))./(3.*Lp.*Lc.^2) - ...
           (-16.*Lp.^2.*S.^2.*(d.^2).*Lc.^2 + ...
            32.*Lp.^2.*S.^2.*d.*Lc.^3 - 16.*Lp.^2.*S.^2.*Lc.^4)./ ...
             (24.*Lp.*Lc.^2.*(-8.*Lp.^3.*S.^3.*(d.^3).*Lc.^3 + ...
               24.*Lp.^3.*S.^3.*(d.^2).*Lc.^4 - ...
                     24.*Lp.^3.*S.^3.*d.*Lc.^5 + ...
               27.*kT.*Lp.^2.*S.^2.*Lc.^6 + 8.*Lp.^3.*S.^3.*Lc.^6 + ...
               3.*sqrt(3).* ...
                sqrt(-16.*kT.*Lp.^5.*S.^5.*(d.^3).*Lc.^9 + ...
                  48.*kT.*Lp.^5.*S.^5.*(d.^2).*Lc.^10 - ...
                           48.*kT.*Lp.^5.*S.^5.*d.*Lc.^11 + ...
                  27.*kT.^2.*Lp.^4.*S.^4.*Lc.^12 + ...
                           16.*kT.*Lp.^5.*S.^5.*Lc.^12)).^(1./3)) + ...
              (1./(6.*Lp.*Lc.^2)).* ...
             (-8.*Lp.^3.*S.^3.*(d.^3).*Lc.^3 + ...
             24.*Lp.^3.*S.^3.*(d.^2).*Lc.^4 - ...
             24.*Lp.^3.*S.^3.*d.*Lc.^5 + ...
                  27.*kT.*Lp.^2.*S.^2.*Lc.^6 + ...
             8.*Lp.^3.*S.^3.*Lc.^6 + ...
             3.*sqrt(3).* ...
              sqrt(-16.*kT.*Lp.^5.*S.^5.*(d.^3).*Lc.^9 + ...
                48.*kT.*Lp.^5.*S.^5.*(d.^2).*Lc.^10 - ...
                        48.*kT.*Lp.^5.*S.^5.*d.*Lc.^11 + ...
                27.*kT.^2.*Lp.^4.*S.^4.*Lc.^12 + ...
                        16.*kT.*Lp.^5.*S.^5.*Lc.^12)).^(1./3) ...
    )+F0;

end

